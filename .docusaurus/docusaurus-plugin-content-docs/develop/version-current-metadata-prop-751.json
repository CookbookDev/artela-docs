{
  "pluginId": "develop",
  "version": "current",
  "label": "Next",
  "banner": null,
  "badge": false,
  "noIndex": false,
  "className": "docs-version-current",
  "isLast": true,
  "docsSidebars": {
    "tutorialSidebar": [
      {
        "type": "link",
        "label": "üîç Overview",
        "href": "/develop/",
        "docId": "index"
      },
      {
        "type": "category",
        "label": "üèÉ Artela Development",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "Quick Start",
            "href": "/develop/art-development/get-started/",
            "docId": "art-development/get-started/index"
          },
          {
            "type": "link",
            "label": "Access Testnet",
            "href": "/develop/art-development/access-testnet/",
            "docId": "art-development/access-testnet/index"
          },
          {
            "type": "link",
            "label": "Start a Local Node",
            "href": "/develop/art-development/start-a-local-node/",
            "docId": "art-development/start-a-local-node/index"
          }
        ],
        "href": "/develop/art-development/"
      },
      {
        "type": "category",
        "label": "‚è∞ Core Concepts",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "ASOLC",
            "href": "/develop/core-concepts/asolc/",
            "docId": "core-concepts/asolc/index"
          },
          {
            "type": "link",
            "label": "Foundational Topics",
            "href": "/develop/core-concepts/foundational/",
            "docId": "core-concepts/foundational/index"
          },
          {
            "type": "link",
            "label": "Architecture",
            "href": "/develop/core-concepts/arch/",
            "docId": "core-concepts/arch/index"
          },
          {
            "type": "link",
            "label": "EVM Compatibility",
            "href": "/develop/core-concepts/evm-compatibility/",
            "docId": "core-concepts/evm-compatibility/index"
          },
          {
            "type": "link",
            "label": "Aspect Lifecycle",
            "href": "/develop/core-concepts/lifecycle/",
            "docId": "core-concepts/lifecycle/index"
          },
          {
            "type": "link",
            "label": "Aspect Programming",
            "href": "/develop/core-concepts/aspect-programming/",
            "docId": "core-concepts/aspect-programming/index"
          },
          {
            "type": "link",
            "label": "Join Point",
            "href": "/develop/core-concepts/join-point/",
            "docId": "core-concepts/join-point/index"
          },
          {
            "type": "link",
            "label": "Aspect",
            "href": "/develop/core-concepts/aspect/",
            "docId": "core-concepts/aspect/index"
          },
          {
            "type": "link",
            "label": "Communication between Aspects & Smart Contracts",
            "href": "/develop/core-concepts/communication/",
            "docId": "core-concepts/communication/index"
          },
          {
            "type": "link",
            "label": "Aspect Runtime",
            "href": "/develop/core-concepts/aspect-runtime/",
            "docId": "core-concepts/aspect-runtime/index"
          },
          {
            "type": "link",
            "label": "Binding",
            "href": "/develop/core-concepts/binding/",
            "docId": "core-concepts/binding/index"
          },
          {
            "type": "link",
            "label": "Aspect Runtime APIs",
            "href": "/develop/core-concepts/runtime-api/",
            "docId": "core-concepts/runtime-api/index"
          },
          {
            "type": "link",
            "label": "System Call",
            "href": "/develop/core-concepts/system-call/",
            "docId": "core-concepts/system-call/index"
          },
          {
            "type": "link",
            "label": "WASM & Assembly Script",
            "href": "/develop/core-concepts/wasm-assemblyscript/",
            "docId": "core-concepts/wasm-assemblyscript/index"
          },
          {
            "type": "link",
            "label": "JIT(Just In Time) Call",
            "href": "/develop/core-concepts/jit-call/",
            "docId": "core-concepts/jit-call/index"
          }
        ]
      },
      {
        "type": "category",
        "label": "ü§ñ Clients",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "EVM-Compatible APIs",
            "href": "/develop/client/evm-compatible-apis/",
            "docId": "client/evm-compatible-apis/index"
          },
          {
            "type": "link",
            "label": "Cosmos APIs",
            "href": "/develop/client/cosmos-apis/",
            "docId": "client/cosmos-apis/index"
          },
          {
            "type": "link",
            "label": "Artela Web3.js",
            "href": "/develop/client/artela-web3.js/",
            "docId": "client/artela-web3.js/index"
          },
          {
            "type": "category",
            "label": "Ethereum Clients Support",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Sending Ethereum Transactions to Artela Testnet",
                "href": "/develop/client/Ethereum Clients Support/ethereum-tx",
                "docId": "client/Ethereum Clients Support/ethereum-tx"
              },
              {
                "type": "link",
                "label": "Deploy & Call ERC20 Contract to Artela Testnet",
                "href": "/develop/client/Ethereum Clients Support/deploy-call-contract",
                "docId": "client/Ethereum Clients Support/deploy-call-contract"
              }
            ]
          }
        ]
      },
      {
        "type": "category",
        "label": "üõú Nodes",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "Setup a Full Node",
            "href": "/develop/node/full-node-setup/",
            "docId": "node/full-node-setup/index"
          },
          {
            "type": "link",
            "label": "Setup a Local TestNet",
            "href": "/develop/node/testnet-setup/",
            "docId": "node/testnet-setup/index"
          }
        ]
      },
      {
        "type": "category",
        "label": "üõ∏ Aspect Document",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "system call",
            "href": "/develop/aspect-doc/system-call/",
            "docId": "aspect-doc/system-call/index"
          },
          {
            "type": "link",
            "label": "aspect tools",
            "href": "/develop/aspect-doc/aspect-tools/",
            "docId": "aspect-doc/aspect-tools/index"
          }
        ],
        "href": "/develop/aspect-doc/"
      },
      {
        "type": "category",
        "label": "üßë‚Äçüè´ Guides",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "renntrancy guard",
            "href": "/develop/guides/reentrancy-guard/",
            "docId": "guides/reentrancy-guard/index"
          }
        ],
        "href": "/develop/guides/"
      },
      {
        "type": "category",
        "label": "old",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "category",
            "label": "Quick Start",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Access Testnet",
                "href": "/develop/old/quick-start/access-testnet/",
                "docId": "old/quick-start/access-testnet/index"
              },
              {
                "type": "link",
                "label": "Develop a Smart Contract",
                "href": "/develop/old/quick-start/develop-a-smart-contract/",
                "docId": "old/quick-start/develop-a-smart-contract/index"
              },
              {
                "type": "link",
                "label": "Develop an Aspect",
                "href": "/develop/old/quick-start/develop-an-aspect/",
                "docId": "old/quick-start/develop-an-aspect/index"
              }
            ],
            "href": "/develop/old/quick-start/"
          },
          {
            "type": "link",
            "label": "Web3.js Guide",
            "href": "/develop/old/web3js-guide/",
            "docId": "old/web3js-guide/index"
          },
          {
            "type": "link",
            "label": "Start a Local Node",
            "href": "/develop/old/start-a-local-node/",
            "docId": "old/start-a-local-node/index"
          },
          {
            "type": "category",
            "label": "Aspect In Depth",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Aspect Tool",
                "href": "/develop/old/aspect-in-depth/aspect-tools/",
                "docId": "old/aspect-in-depth/aspect-tools/index"
              },
              {
                "type": "link",
                "label": "Aspect Deep Dive",
                "href": "/develop/old/aspect-in-depth/aspect-dd/",
                "docId": "old/aspect-in-depth/aspect-dd/index"
              }
            ],
            "href": "/develop/old/aspect-in-depth/"
          },
          {
            "type": "category",
            "label": "Aspect Examples",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Security Aspect",
                "href": "/develop/old/aspect-examples/security-aspect/",
                "docId": "old/aspect-examples/security-aspect/index"
              },
              {
                "type": "link",
                "label": "On-Chain Automation Aspect",
                "href": "/develop/old/aspect-examples/schedular-aspect/",
                "docId": "old/aspect-examples/schedular-aspect/index"
              }
            ],
            "href": "/develop/old/aspect-examples/"
          },
          {
            "type": "category",
            "label": "Resources",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Faucet",
                "href": "/develop/old/resources/faucet/",
                "docId": "old/resources/faucet/index"
              },
              {
                "type": "link",
                "label": "Writing Solidity Smart Contract on Artela",
                "href": "/develop/old/resources/write-smart-contract/",
                "docId": "old/resources/write-smart-contract/index"
              }
            ],
            "href": "/develop/old/resources/"
          },
          {
            "type": "link",
            "label": "ASOLC Guide",
            "href": "/develop/old/asolc-guide/",
            "docId": "old/asolc-guide/index"
          }
        ]
      }
    ]
  },
  "docs": {
    "art-development/access-testnet/index": {
      "id": "art-development/access-testnet/index",
      "title": "Accessing Testnet",
      "description": "The Artela Testnet is in its alpha release phase. Kindly note:",
      "sidebar": "tutorialSidebar"
    },
    "art-development/get-started/index": {
      "id": "art-development/get-started/index",
      "title": "Quick Start",
      "description": "Welcome to the Artela Quick Start Guide! This section guides you in creating dApps on Artela with aspect-oriented functionality. It intercepts and identifies specific transactions while enabling additional business logic injection. For instance, if a transaction tries to modify a state variable (e.g., 'Count') with certain conditions, like being an even number, the current transaction is rolled back.",
      "sidebar": "tutorialSidebar"
    },
    "art-development/index": {
      "id": "art-development/index",
      "title": "Artela Development",
      "description": "What Artela is Building?",
      "sidebar": "tutorialSidebar"
    },
    "art-development/start-a-local-node/index": {
      "id": "art-development/start-a-local-node/index",
      "title": "Start a Local Node",
      "description": "1. Building the Source",
      "sidebar": "tutorialSidebar"
    },
    "aspect-doc/aspect-tools/index": {
      "id": "aspect-doc/aspect-tools/index",
      "title": "Aspect Reentrancy Guard",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "aspect-doc/index": {
      "id": "aspect-doc/index",
      "title": "Writing Aspect",
      "description": "Welcome to the Writing Aspect Guide. This guide will walk you through all functionalities of aspect-tool with an example. This example including the process of how to use aspect-tool to install, initialize, and generate code for your projects.",
      "sidebar": "tutorialSidebar"
    },
    "aspect-doc/system-call/index": {
      "id": "aspect-doc/system-call/index",
      "title": "Aspect Reentrancy Guard",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "client/artela-web3.js/index": {
      "id": "client/artela-web3.js/index",
      "title": "Artela Web3.js",
      "description": "@artela/web3 is a modified version of Ethereum's web3.js 1.x, supporting Aspect operations. This package retains full compatibility with the original web3.js, with minor adjustments. If your dApp utilizes the original web3.js, transitioning to Artela is as straightforward as replacing the package and import statements.",
      "sidebar": "tutorialSidebar"
    },
    "client/cosmos-apis/index": {
      "id": "client/cosmos-apis/index",
      "title": "Cosmos APIs",
      "description": "CometBFT RPC",
      "sidebar": "tutorialSidebar"
    },
    "client/Ethereum Clients Support/deploy-call-contract": {
      "id": "client/Ethereum Clients Support/deploy-call-contract",
      "title": "Deploy & Call ERC20 Contract to Artela Testnet",
      "description": "The web3.js library is a collection of modules that contain functionality for the ethereum ecosystem.",
      "sidebar": "tutorialSidebar"
    },
    "client/Ethereum Clients Support/ethereum-tx": {
      "id": "client/Ethereum Clients Support/ethereum-tx",
      "title": "Sending Ethereum Transactions to Artela Testnet",
      "description": "The web3.js library is a collection of modules that contain functionality for the ethereum ecosystem.",
      "sidebar": "tutorialSidebar"
    },
    "client/evm-compatible-apis/index": {
      "id": "client/evm-compatible-apis/index",
      "title": "EVM-Compatible APIs",
      "description": "Artela JSON-RPC Server provides an API that facilitates connection to the Artela blockchain and interaction with the EVM. JSON-RPC is a stateless, lightweight protocol for remote procedure calls (RPC). It defines various data structures and the rules governing their processing. JSON-RPC is compatible with multiple transport protocols. Artela, in particular, supports JSON-RPC over HTTP and WebSocket.",
      "sidebar": "tutorialSidebar"
    },
    "core-concepts/arch/index": {
      "id": "core-concepts/arch/index",
      "title": "Architecture",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "core-concepts/asolc/index": {
      "id": "core-concepts/asolc/index",
      "title": "ASOLC",
      "description": "What is ASOLC?",
      "sidebar": "tutorialSidebar"
    },
    "core-concepts/aspect-programming/index": {
      "id": "core-concepts/aspect-programming/index",
      "title": "Aspect Programming",
      "description": "Aspect Programming introduces a powerful paradigm built around the Join Point Model (JPM). This model centers on three pivotal components:",
      "sidebar": "tutorialSidebar"
    },
    "core-concepts/aspect-runtime/index": {
      "id": "core-concepts/aspect-runtime/index",
      "title": "Aspect Runtime",
      "description": "The Aspect runtime serves as a specialized WASM virtual machine, tailor-made for executing Aspect. Its initial version uses WASMTime, a robust and swift WebAssembly implementation crafted in Rust.",
      "sidebar": "tutorialSidebar"
    },
    "core-concepts/aspect/index": {
      "id": "core-concepts/aspect/index",
      "title": "Aspect",
      "description": "Aspect introduces a dynamic mechanism to implement system-level features on a blockchain. Simply put, an Aspect is akin to a system extension, executed in WASM, which can be bound to any smart contract. It offers the flexibility to either augment the capabilities of the target contract or monitor its activities and initiate specific actions when predefined conditions align.",
      "sidebar": "tutorialSidebar"
    },
    "core-concepts/binding/index": {
      "id": "core-concepts/binding/index",
      "title": "Binding",
      "description": "Binding is a crucial process in Aspect-based development. An Aspect can only be triggered at certain join points when it is bound to a specific smart contract.",
      "sidebar": "tutorialSidebar"
    },
    "core-concepts/communication/index": {
      "id": "core-concepts/communication/index",
      "title": "Communication between Aspects & Smart Contracts",
      "description": "While Aspect and Smart Contract execution environments are distinct (WASM vs EVM), they aren't completely isolated. Just as smart contracts can interact via contract calls, there are several methods for Aspects and Smart Contracts to exchange information. This document elaborates on these methods.",
      "sidebar": "tutorialSidebar"
    },
    "core-concepts/evm-compatibility/index": {
      "id": "core-concepts/evm-compatibility/index",
      "title": "EVM Compatibility",
      "description": "Artela is fully EVM compatible. This means that you can use Artela to deploy and run smart contracts written in Solidity, Vyper, and other EVM compatible languages without any issue.",
      "sidebar": "tutorialSidebar"
    },
    "core-concepts/foundational/index": {
      "id": "core-concepts/foundational/index",
      "title": "Foundational Topics",
      "description": "Since Artela is an EVM compatible blockchain, it shares some common concepts with Ethereum. You can check out the articles from Ethereum:",
      "sidebar": "tutorialSidebar"
    },
    "core-concepts/jit-call/index": {
      "id": "core-concepts/jit-call/index",
      "title": "JIT(Just In Time) Call",
      "description": "Aspect can insert additional contract calls into the current EVM callstack at Contract Call Level Join Points. This operation is known as Just-In-Time (JIT) Call. With this capability, dApps can make call-level real-time decisions. For instance, they can provide just-in-time liquidity to a DEX pool and etc. The sender of the JIT call must be an AA (Account Abstraction) wallet, and this wallet must have authorized the given Aspect to perform such an operation. For more details about AA wallets, please refer to the documentation on Account Abstraction.",
      "sidebar": "tutorialSidebar"
    },
    "core-concepts/join-point/index": {
      "id": "core-concepts/join-point/index",
      "title": "Join Point",
      "description": "Each Join Point represents a specific state transition function at certain transaction lifecycle stage. Each Join Point is composed of a specific metadata (describes when to trigger it, what system module it can invoke and which runtime context it can access) and an entrypoint function(method in your Aspect class, e.g. PreTxExecute).",
      "sidebar": "tutorialSidebar"
    },
    "core-concepts/lifecycle/index": {
      "id": "core-concepts/lifecycle/index",
      "title": "Aspect Lifecycle",
      "description": "The lifecycle of an Aspect encompasses several stages, including deployment, upgrade, configuration, binding, unbinding, execution, and destruction.",
      "sidebar": "tutorialSidebar"
    },
    "core-concepts/runtime-api/index": {
      "id": "core-concepts/runtime-api/index",
      "title": "Aspect Runtime APIs",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "core-concepts/system-call/index": {
      "id": "core-concepts/system-call/index",
      "title": "System Call",
      "description": "In the world of Aspect, a \"system call\" is a mechanism that triggers the execution of a specific system module, which we'll refer to as \"Module\". Each Module can have its own internal states, known as \"Module States\". The way a Module changes over time can be understood as follows: The Module States at a future moment are determined by a system call applied to the Module States at a current moment along with the input to that system call.",
      "sidebar": "tutorialSidebar"
    },
    "core-concepts/wasm-assemblyscript/index": {
      "id": "core-concepts/wasm-assemblyscript/index",
      "title": "WASM & Assembly Script",
      "description": "WIP",
      "sidebar": "tutorialSidebar"
    },
    "guides/index": {
      "id": "guides/index",
      "title": "Guides",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "guides/reentrancy-guard/index": {
      "id": "guides/reentrancy-guard/index",
      "title": "Aspect Reentrancy Guard",
      "description": "Intro",
      "sidebar": "tutorialSidebar"
    },
    "index": {
      "id": "index",
      "title": "üîç Overview",
      "description": "Artela is an EVM compatible blockchain network built with Cosmos SDK. You can seamlessly deploy your Ethereum dApps on Artela without any issue. And at the mean time, you can also leverage your dApp with Aspect programming to make it even more powerful.",
      "sidebar": "tutorialSidebar"
    },
    "node/full-node-setup/index": {
      "id": "node/full-node-setup/index",
      "title": "Setup a Full Node",
      "description": "This document provides an introduction to joining the Artela testnet as a full node.",
      "sidebar": "tutorialSidebar"
    },
    "node/testnet-setup/index": {
      "id": "node/testnet-setup/index",
      "title": "Setup a Local TestNet",
      "description": "This document aims to guide you in compiling Artela code, configuring, and generating a testnet setup consisting of a minimum of four validators. Subsequently, we will outline how to deploy these configuration and data files to four individual machines.",
      "sidebar": "tutorialSidebar"
    },
    "old/asolc-guide/index": {
      "id": "old/asolc-guide/index",
      "title": "ASOLC Guide",
      "description": "Similar to Ethereum, Artela supports EVM smart contracts. However, Artela runs a modified version of the EVM, which is fully compatible with legacy Solidity but includes additional features such as state and call stack tracing.",
      "sidebar": "tutorialSidebar"
    },
    "old/aspect-examples/index": {
      "id": "old/aspect-examples/index",
      "title": "Aspect Examples",
      "description": "Explore step-by-step examples of Aspect programming in action. These examples demonstrate how you can use Aspects to enhance the functionality and security of your smart contracts.",
      "sidebar": "tutorialSidebar"
    },
    "old/aspect-examples/schedular-aspect/index": {
      "id": "old/aspect-examples/schedular-aspect/index",
      "title": "Scheduler Aspect",
      "description": "The Scheduler Aspect is a practical example of building an on-chain scheduled transaction trigger. In this scenario, we'll create an ERC20 token called ArtToken and use a Broker contract to schedule fund transfers to a designated account at regular 5-block intervals.",
      "sidebar": "tutorialSidebar"
    },
    "old/aspect-examples/security-aspect/index": {
      "id": "old/aspect-examples/security-aspect/index",
      "title": "Security Aspect",
      "description": "The \"Security Aspect on Artela\" is a security implementation that safeguards transactions, particularly in scenarios where a bookkeeping contract may be vulnerable to reentrancy attacks due to unpredictable bugs. This Aspect verifies the balance in the contract and compares it to the actual balance, intercepting any transactions associated with such attacks.",
      "sidebar": "tutorialSidebar"
    },
    "old/aspect-in-depth/aspect-dd/index": {
      "id": "old/aspect-in-depth/aspect-dd/index",
      "title": "Aspect Deep Dive",
      "description": "Welcome to the deep dive of Aspect. This guide will introduce you some concepts and functionalities of Aspects in depth.",
      "sidebar": "tutorialSidebar"
    },
    "old/aspect-in-depth/aspect-tools/index": {
      "id": "old/aspect-in-depth/aspect-tools/index",
      "title": "Aspect Tool",
      "description": "Welcome to the Aspect Tool Guide. This guide will walk you through all functionalities of aspect-tool with an example. This example including the process of how to use aspect-tool to install, initialize, and generate code for your projects.",
      "sidebar": "tutorialSidebar"
    },
    "old/aspect-in-depth/index": {
      "id": "old/aspect-in-depth/index",
      "title": "Aspect In Depth",
      "description": "This is an in-depth guide of Aspect development, we will go through most of the functionalities in aspect-tool(a commandline tool we built to make the Aspect development easier) and the concepts of Aspect(how it works, how it communicates with base layer and etc).",
      "sidebar": "tutorialSidebar"
    },
    "old/quick-start/access-testnet/index": {
      "id": "old/quick-start/access-testnet/index",
      "title": "Accessing Testnet",
      "description": "The Artela Testnet is in its beta release phase. Kindly note:",
      "sidebar": "tutorialSidebar"
    },
    "old/quick-start/develop-a-smart-contract/index": {
      "id": "old/quick-start/develop-a-smart-contract/index",
      "title": "Developing Smart Contracts with Artela",
      "description": "Artela's EVM supports smart contracts much like Ethereum. However, it not only maintains full compatibility with original version of Solidity but also introduces some enhancements, including state and call stack tracing.",
      "sidebar": "tutorialSidebar"
    },
    "old/quick-start/develop-an-aspect/index": {
      "id": "old/quick-start/develop-an-aspect/index",
      "title": "Develop an Aspect",
      "description": "An Aspect is a dynamic, stateful extension that leverages Web Assembly (WASM) to introduce additional functionalities into the lifecycles of blocks or transactions specific to smart contracts. This guide will walk you through the process of building a basic Aspect using AssemblyScript (a subset of TypeScript).",
      "sidebar": "tutorialSidebar"
    },
    "old/quick-start/index": {
      "id": "old/quick-start/index",
      "title": "Quick Start",
      "description": "Welcome to the Artela Quick Start Guide!",
      "sidebar": "tutorialSidebar"
    },
    "old/resources/faucet/index": {
      "id": "old/resources/faucet/index",
      "title": "Faucet",
      "description": "When using the Artela testnet, you have the choice to either use public accounts provided for your convenience or create and utilize your own accounts. Here's a breakdown of both options:",
      "sidebar": "tutorialSidebar"
    },
    "old/resources/index": {
      "id": "old/resources/index",
      "title": "Resources",
      "description": "Here you'll find useful tools and guides to help you get started with Artela.",
      "sidebar": "tutorialSidebar"
    },
    "old/resources/write-smart-contract/index": {
      "id": "old/resources/write-smart-contract/index",
      "title": "Writing Solidity Smart Contract on Artela",
      "description": "If you're eager to get started with Solidity smart contracts on Artela, follow these concise steps to create and deploy your smart contract using Remix:",
      "sidebar": "tutorialSidebar"
    },
    "old/start-a-local-node/index": {
      "id": "old/start-a-local-node/index",
      "title": "Start a Local Node",
      "description": "1. Building the Source",
      "sidebar": "tutorialSidebar"
    },
    "old/web3js-guide/index": {
      "id": "old/web3js-guide/index",
      "title": "Web3.js Guide",
      "description": "@artela/web3 is a modified version of Ethereum's web3.js 1.x, supporting Aspect operations. This package retains full compatibility with the original web3.js, with minor adjustments. If your dApp utilizes the original web3.js, transitioning to Artela is as straightforward as replacing the package and import statements.",
      "sidebar": "tutorialSidebar"
    }
  }
}